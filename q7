//注意 clearTimeout 只是使得timer不再run，timer不会=null如果想check timer存在的话必须设置timer=null
function debounce(func, wait, option = {leading: false, trailing: true}) {
  let timer = null;
  const {leading, trailing} = option;
  return function(...args) {
     if (leading && !timer) {
        func.apply(this, args);
        timer = setTimeout(()=> {
          timer = null;
          clearTimeout(timer);
        }, wait);
       return;
     } else if (trailing) {
       clearTimeout(timer);
       timer = setTimeout(()=> {
         timer = null;
         clearTimeout(timer);
         func.apply(this, args);
       }, wait)
       return;
     } 
    clearTimeout(timer);
    timer = setTimeout(()=> {
        timer = null;
        clearTimeout(timer);
      }, wait);
  }
}

/*******/
function debounce(func, wait, option = {leading: false, trailing: true}) {
  let timer = null;
  let todo = null;
  const {leading, trailing} = option;
  return function(...args) {
     if (leading && !timer) {
        func.apply(this, args);
     } else if (trailing) {
       todo = args;
     } 
    clearTimeout(timer);
    timer = null;

    timer = setTimeout(()=> {
      if (todo) {
        func.apply(this, todo);
        todo = null;
      }
        timer = null;
        clearTimeout(timer);
      }, wait);
  }
}
